//variables
$fuente-tipica: sans-serif, helvetica;
$color-fondo: rgb(196, 185, 185);
$color-letra: red;
$color-caja: blue;

//uso de variables
body{
    background-color: $color-fondo;
}
h1{
    font-family: $fuente-tipica;
    color: $color-letra;
}
//anidación
.caja{
    border: 4px solid black;
    background-color: white;
    margin: 0px auto;
    width: 800px;
    text-align: center;
    h1{
        color: $color-fondo
    }
    p{
        color: green;
    }
    .info{
        font-size: 30px;
        .author{
            font-size: 60px;
            color: yellowgreen;
            border-bottom: 1px solid black;
        }
    }
}
//Mixins/Funciones
@mixin crearBordes($color, $size, $shadow) {
    border: $size solid $color;
    box-shadow: 0px 0px $size $shadow;
    border-radius: $size;
}
.caja{
    @include crearBordes(red, 5px, black);
}
.listado{
    @include crearBordes(blue, 10px, yellowgreen);
}

//herencia
%alert-normal{
    background-color: red;
    color: white;
    border: 2px solid rgb(109, 30, 30);
    padding: 10px;
    width: 80%;
    margin: 20px auto;
}

.alert{
    @extend %alert-normal;
}
.alert-danger{
    @extend %alert-normal;
    background-color: red;
    border: 2px solid red;
}
.alert-succes{
    @extend %alert-normal;
    background-color: green;
    border: 2px solid green;
    color: black;
}

//operadores
h1{
    font-size: 23px + 10px;
}
//condicionales -if 
$color-fondo: blue;
h1{
    @if $color-fondo== #ccc {
        color: black;
    
    } @else if $color-fondo == black{
        color: lightsalmon;
    } @else{
        color: pink;
    }
}

// for
$contador: 1;
@for $contador from 1 to 10 {
    
}
// EACH

//While

//ya que se genera un fichero estatico,
// no tiene mucho sentido usar estos últimos 
//elementos.